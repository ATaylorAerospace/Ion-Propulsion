import logging
from pathlib import Path
from typing import Dict

def get_logger() -> logging.Logger:
    """Get root logger or default pyfstat logger if no handlers."""
    logger = logging.getLogger()
    if not logger.hasHandlers():
        return logging.getLogger("pyfstat")
    return logger

def setup_logging(
    log_file: Path, 
    log_label: str = "app",
    append: bool = True
) -> logging.Logger:
    """Set up logging to file and stdout stream."""

    logger = get_logger()
    
    if not append:
        logger.handlers.clear()
    
    file_handler = logging.FileHandler(log_file / f"{log_label}.log")
    stream_handler = logging.StreamHandler()
    
    logger.addHandler(file_handler)
    logger.addHandler(stream_handler)

    return logger


def check_file_handler(handler: logging.FileHandler, path: Path) -> None:
    """Validate file handler configuration."""

    assert isinstance(handler, logging.FileHandler)
    assert handler.baseFilename == str(path)
    assert path.is_file()


def test_setup_logging(tmp_path: Path) -> None:

    log_args = {"outdir": tmp_path, "label": "test"}
    log_file = setup_logging(**log_args)

    check_file_handler(log_file.handlers[0], 
                       tmp_path / f"{log_args['label']}.log")
